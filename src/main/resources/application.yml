spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/demohikaridb
    username: root
    password: root
    hikari:
      # 커넥션 풀에서 커넥션을 구하기 위해 **대기**하는 시간 (ms), 기본값 30
      connection-timeout: 30000

      # 커넥션 풀의 최대 크기 설정, 기본값 10
      maximum-pool-size: 10

      # 풀에서 유지할 최소 유휴 커넥션 개수를 지정, 기본값은 maximumPoolSize와 동일
      # HikariCP 문서에 따르면 설정하지 않는 것을 추천한다. 즉 maximumPoolSize와 동일 크기를 추천한다.
      # minimum-idle: 10

      # 커넥션이 살아 있는지 확인하는 주기, 유휴 커넥션에 대해 커넥션을 검증하고 유효하지 않은 경우 풀에서 제거한다. 제거 후 커넥션을 새로 생성한다.
      # 네트워크나 데이터베이스의 관련 설정 값보다 작은 값을 사용한다. 관련 설정 예시로는 데이터베이스의 미활동 대기 시간이 될 수 있다
      # (기본값: 0 (사용안 함))
      keepalive-time: 0

      # 커넥션을 생성한 뒤 설정된 시간이 지나면 커넥션을 닫고 풀에서 제거, 제거한 뒤 커넥션을 새롭게 생성한다. 기본값은 30분
      # 기본적인 규칙은 네트워크나 데이터베이스의 관련 설정 값보다 작은 값을 사용
      max-lifetime: 1800000

      # 사용하지 않고 풀에 머물 수 있는 시간인 최대 유휴 시간을 설정(ms), 기본값 600000
      # 해당 설정은 **minimumIdle < maximumPoolSize**인 경우 적용된다.
      idle-timeout: 600000

  jpa:
    open-in-view: false # osiv 끄기
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: validate

    properties:
      hibernate:
        format_sql: true

logging:
  level:
    org.hibernate.SQL: info
    root: info
    com.zaxxer.hikari.pool.HikariPool: debug # Hikari Pool이 제대로 동작하고 있는지 로깅 레벨 설정